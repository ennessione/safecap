package uk.ac.ncl.safecap.xdata.provers.why3;

import java.util.ArrayList;
import java.util.List;

import uk.ac.ncl.eventb.why3.filter.ContextProviderBase;
import uk.ac.ncl.eventb.why3.filter.FilterGlobals;
import uk.ac.ncl.eventb.why3.filter.NaiveContextProvider;
import uk.ac.ncl.safecap.xdata.provers.TranslationException;
import uk.ac.ncl.safecap.xdata.verification.core.VerificationBasePlugin;

public class TheoremTranslated {
	public static final String GOAL_PREFIX = "\tgoal g0: ";
	private final List<String> imports;
	private final List<String> types;
	private final List<String> definitions;
	private List<String> hypothesis;
	private String goal;
	private final ContextProviderBase context;

	public TheoremTranslated(ContextProviderBase context) {
		this.context = context;
		types = new ArrayList<>();
		imports = new ArrayList<>();
		hypothesis = new ArrayList<>();
		definitions = new ArrayList<>();
		hypothesis = new ArrayList<>();
	}

	public List<String> getImports() {
		return imports;
	}

	public void addImport(String value) {
		imports.add(value);
	}

	public void ppImports(StringBuilder sb) {
		for (final String h : imports) {
			sb.append("\timport ");
			sb.append(h);
			sb.append(";\n");
		}
	}

	public List<String> getTypes() {
		return types;
	}

	public void addType(String value) {
		types.add(value);
	}

	public void ppTypes(StringBuilder sb) {
		for (final String h : types) {
			sb.append("\ttype ");
			sb.append(h);
			sb.append("\n");
		}
	}

	public List<String> getDefinitions() {
		return definitions;
	}

	public void addDefinition(String value) {
		definitions.add(value);
	}

	public void ppDefinitions(StringBuilder sb) {
		for (final String h : definitions) {
			sb.append("\t");
			sb.append(h);
			sb.append("\n");
		}
	}

	public List<String> getHypothesis() {
		return hypothesis;
	}

	public void addHypothesis(String value) {
		hypothesis.add(value);
	}

	public void ppHypothesis(StringBuilder sb) {
		int i = 1;
		for (final String h : hypothesis) {
			sb.append("\taxiom hyp" + i++ + ": ");
			sb.append(h);
			sb.append("\n");
		}
	}

	public String getGoal() {
		return goal;
	}

	public void setGoal(String goal) {
		this.goal = goal;
	}

	public String toString(ContextProviderBase provider) throws TranslationException {
		final StringBuilder sb = new StringBuilder();

		sb.append("(*\n");
		sb.append("This file was generated by SafeCap why3 back-end version ");
		sb.append(VerificationBasePlugin.getContext().getBundle().getVersion().toString());
		sb.append("\n");

		sb.append("Filter options:\n");
		FilterGlobals.printFilterOptions(sb);
		sb.append("*)\n");

		sb.append("theory POx\n");

		provider.addTheoryImports(sb);

		if (!imports.isEmpty()) {
			sb.append("\n\n\t(* custom imports *)\n");
			ppImports(sb);
		}

		if (!types.isEmpty()) {
			sb.append("\n\n\t(* types *)\n");
			ppTypes(sb);
		}

		if (!definitions.isEmpty()) {
			sb.append("\n\n\t(* definitions *)\n");
			ppDefinitions(sb);
		}

		provider.addInplaceLemmas(sb);

		if (!hypothesis.isEmpty()) {
			sb.append("\n\n\t(* hypothesis *)\n");
			ppHypothesis(sb);
		}

		if (goal != null) {
			sb.append("\n\n\t(* goal *)\n");
			sb.append(GOAL_PREFIX);
			sb.append(goal);
			sb.append("\n");
		}
		sb.append("end\n");
		return sb.toString();
	}

	public String toString(boolean comments) {
		try {
			if (context == null) {
				return toString(NaiveContextProvider.INSTANCE);
			} else {
				return toString(context);
			}
		} catch (final TranslationException e) {
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public String toString() {
		return toString(true);
	}

}
